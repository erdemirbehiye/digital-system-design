/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 2.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 2500.0;
	SIMULATION_TIME = 2500.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 25.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("Clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DioExt")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("DioExt[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("DioExt[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "DioExt";
}

SIGNAL("Sel1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RnW1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Sel2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RnW2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Sel3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RnW3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Reg8bit:R1|FF")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Reg8bit:R1|FF[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R1|FF";
}

SIGNAL("Reg8bit:R1|FF[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R1|FF";
}

SIGNAL("Reg8bit:R1|FF[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R1|FF";
}

SIGNAL("Reg8bit:R1|FF[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R1|FF";
}

SIGNAL("Reg8bit:R1|FF[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R1|FF";
}

SIGNAL("Reg8bit:R1|FF[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R1|FF";
}

SIGNAL("Reg8bit:R1|FF[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R1|FF";
}

SIGNAL("Reg8bit:R1|FF[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R1|FF";
}

SIGNAL("Reg8bit:R2|FF")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Reg8bit:R2|FF[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R2|FF";
}

SIGNAL("Reg8bit:R2|FF[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R2|FF";
}

SIGNAL("Reg8bit:R2|FF[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R2|FF";
}

SIGNAL("Reg8bit:R2|FF[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R2|FF";
}

SIGNAL("Reg8bit:R2|FF[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R2|FF";
}

SIGNAL("Reg8bit:R2|FF[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R2|FF";
}

SIGNAL("Reg8bit:R2|FF[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R2|FF";
}

SIGNAL("Reg8bit:R2|FF[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R2|FF";
}

SIGNAL("Reg8bit:R3|FF")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("Reg8bit:R3|FF[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R3|FF";
}

SIGNAL("Reg8bit:R3|FF[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R3|FF";
}

SIGNAL("Reg8bit:R3|FF[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R3|FF";
}

SIGNAL("Reg8bit:R3|FF[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R3|FF";
}

SIGNAL("Reg8bit:R3|FF[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R3|FF";
}

SIGNAL("Reg8bit:R3|FF[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R3|FF";
}

SIGNAL("Reg8bit:R3|FF[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R3|FF";
}

SIGNAL("Reg8bit:R3|FF[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "Reg8bit:R3|FF";
}

SIGNAL("DioExt[0]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[1]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[2]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[3]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[4]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[5]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[6]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DioExt[7]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SelA")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RnWa")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Acc8Bit:A1|FF")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BURIED;
	PARENT = "";
}

SIGNAL("Acc8Bit:A1|FF[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Acc8Bit:A1|FF";
}

SIGNAL("Acc8Bit:A1|FF[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Acc8Bit:A1|FF";
}

SIGNAL("Acc8Bit:A1|FF[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Acc8Bit:A1|FF";
}

SIGNAL("Acc8Bit:A1|FF[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Acc8Bit:A1|FF";
}

SIGNAL("Acc8Bit:A1|FF[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Acc8Bit:A1|FF";
}

SIGNAL("Acc8Bit:A1|FF[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Acc8Bit:A1|FF";
}

SIGNAL("Acc8Bit:A1|FF[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Acc8Bit:A1|FF";
}

SIGNAL("Acc8Bit:A1|FF[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BURIED;
	PARENT = "Acc8Bit:A1|FF";
}

GROUP("DioExtOut")
{
	MEMBERS = "DioExt[0]~result", "DioExt[1]~result", "DioExt[2]~result", "DioExt[3]~result", "DioExt[4]~result", "DioExt[5]~result", "DioExt[6]~result", "DioExt[7]~result";
}

TRANSITION_LIST("Clock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 18;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
	}
}

TRANSITION_LIST("DioExt[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 450.0;
		LEVEL Z FOR 900.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL Z FOR 500.0;
	}
}

TRANSITION_LIST("DioExt[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 450.0;
		LEVEL Z FOR 900.0;
		LEVEL 1 FOR 100.0;
		LEVEL Z FOR 300.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 500.0;
	}
}

TRANSITION_LIST("DioExt[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 300.0;
		LEVEL Z FOR 900.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 300.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 500.0;
	}
}

TRANSITION_LIST("DioExt[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 150.0;
		LEVEL Z FOR 900.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 300.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 500.0;
	}
}

TRANSITION_LIST("DioExt[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 450.0;
		LEVEL Z FOR 900.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL Z FOR 500.0;
	}
}

TRANSITION_LIST("DioExt[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 450.0;
		LEVEL Z FOR 900.0;
		LEVEL 1 FOR 100.0;
		LEVEL Z FOR 300.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 500.0;
	}
}

TRANSITION_LIST("DioExt[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 300.0;
		LEVEL Z FOR 900.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 300.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 500.0;
	}
}

TRANSITION_LIST("DioExt[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 150.0;
		LEVEL Z FOR 900.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 300.0;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 500.0;
	}
}

TRANSITION_LIST("Sel1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 350.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 500.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 700.0;
	}
}

TRANSITION_LIST("RnW1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1300.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 1100.0;
	}
}

TRANSITION_LIST("Sel2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 125.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1275.0;
	}
}

TRANSITION_LIST("RnW2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 850.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 125.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1275.0;
	}
}

TRANSITION_LIST("Sel3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 475.0;
		LEVEL 1 FOR 125.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 1500.0;
	}
}

TRANSITION_LIST("RnW3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 650.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 1700.0;
	}
}

TRANSITION_LIST("Reg8bit:R1|FF[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1752.954;
		LEVEL 1 FOR 747.046;
	}
}

TRANSITION_LIST("Reg8bit:R1|FF[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("Reg8bit:R1|FF[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 752.964;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 747.036;
	}
}

TRANSITION_LIST("Reg8bit:R1|FF[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 252.964;
		LEVEL 1 FOR 2247.036;
	}
}

TRANSITION_LIST("Reg8bit:R1|FF[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1752.964;
		LEVEL 1 FOR 747.036;
	}
}

TRANSITION_LIST("Reg8bit:R1|FF[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("Reg8bit:R1|FF[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 752.964;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 747.036;
	}
}

TRANSITION_LIST("Reg8bit:R1|FF[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 252.954;
		LEVEL 1 FOR 2247.046;
	}
}

TRANSITION_LIST("Reg8bit:R2|FF[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("Reg8bit:R2|FF[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("Reg8bit:R2|FF[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 352.954;
		LEVEL 1 FOR 2147.046;
	}
}

TRANSITION_LIST("Reg8bit:R2|FF[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("Reg8bit:R2|FF[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("Reg8bit:R2|FF[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("Reg8bit:R2|FF[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 352.954;
		LEVEL 1 FOR 2147.046;
	}
}

TRANSITION_LIST("Reg8bit:R2|FF[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("Reg8bit:R3|FF[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("Reg8bit:R3|FF[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("Reg8bit:R3|FF[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 552.954;
		LEVEL 1 FOR 1947.046;
	}
}

TRANSITION_LIST("Reg8bit:R3|FF[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 552.964;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 1547.036;
	}
}

TRANSITION_LIST("Reg8bit:R3|FF[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("Reg8bit:R3|FF[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("Reg8bit:R3|FF[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 552.954;
		LEVEL 1 FOR 1947.046;
	}
}

TRANSITION_LIST("Reg8bit:R3|FF[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 552.954;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 1547.046;
	}
}

TRANSITION_LIST("DioExt[0]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 150.0;
		LEVEL Z FOR 65.323;
		LEVEL 1 FOR 147.131;
		LEVEL Z FOR 54.414;
		LEVEL 0 FOR 145.331;
		LEVEL Z FOR 129.669;
		LEVEL 0 FOR 95.331;
		LEVEL Z FOR 78.052;
		LEVEL 1 FOR 96.928;
		LEVEL Z FOR 87.821;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 115.922;
		LEVEL 1 FOR 43.254;
		LEVEL 0 FOR 48.411;
		LEVEL Z FOR 92.413;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 500.0;
	}
}

TRANSITION_LIST("DioExt[1]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 300.0;
		LEVEL Z FOR 66.058;
		LEVEL 1 FOR 147.131;
		LEVEL Z FOR 54.414;
		LEVEL 1 FOR 145.331;
		LEVEL Z FOR 129.669;
		LEVEL 1 FOR 95.331;
		LEVEL Z FOR 78.052;
		LEVEL 1 FOR 96.928;
		LEVEL Z FOR 87.086;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 116.657;
		LEVEL 0 FOR 91.665;
		LEVEL Z FOR 91.678;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 500.0;
	}
}

TRANSITION_LIST("DioExt[2]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 450.0;
		LEVEL Z FOR 65.757;
		LEVEL 0 FOR 147.387;
		LEVEL Z FOR 54.132;
		LEVEL 0 FOR 145.613;
		LEVEL Z FOR 129.387;
		LEVEL 0 FOR 95.613;
		LEVEL Z FOR 77.814;
		LEVEL 0 FOR 97.166;
		LEVEL Z FOR 87.131;
		LEVEL 1 FOR 100.0;
		LEVEL Z FOR 116.331;
		LEVEL 0 FOR 91.946;
		LEVEL Z FOR 91.723;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 500.0;
	}
}

TRANSITION_LIST("DioExt[3]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 450.0;
		LEVEL Z FOR 66.833;
		LEVEL 0 FOR 147.131;
		LEVEL Z FOR 54.414;
		LEVEL 0 FOR 145.331;
		LEVEL Z FOR 129.669;
		LEVEL 0 FOR 95.331;
		LEVEL Z FOR 78.052;
		LEVEL 0 FOR 96.928;
		LEVEL Z FOR 86.311;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 117.432;
		LEVEL 1 FOR 42.822;
		LEVEL 0 FOR 48.843;
		LEVEL Z FOR 90.903;
		LEVEL 1 FOR 100.0;
		LEVEL Z FOR 500.0;
	}
}

TRANSITION_LIST("DioExt[4]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 150.0;
		LEVEL Z FOR 64.584;
		LEVEL 1 FOR 147.131;
		LEVEL Z FOR 54.414;
		LEVEL 0 FOR 145.331;
		LEVEL Z FOR 129.669;
		LEVEL 0 FOR 95.331;
		LEVEL Z FOR 78.052;
		LEVEL 1 FOR 96.928;
		LEVEL Z FOR 88.56;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 115.183;
		LEVEL 1 FOR 44.551;
		LEVEL 0 FOR 47.114;
		LEVEL Z FOR 93.152;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 500.0;
	}
}

TRANSITION_LIST("DioExt[5]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 300.0;
		LEVEL Z FOR 65.367;
		LEVEL 1 FOR 147.131;
		LEVEL Z FOR 54.414;
		LEVEL 1 FOR 145.331;
		LEVEL Z FOR 129.669;
		LEVEL 1 FOR 95.331;
		LEVEL Z FOR 78.052;
		LEVEL 1 FOR 96.928;
		LEVEL Z FOR 87.777;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 115.847;
		LEVEL 0 FOR 91.784;
		LEVEL Z FOR 92.369;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 500.0;
	}
}

TRANSITION_LIST("DioExt[6]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 450.0;
		LEVEL Z FOR 65.812;
		LEVEL 0 FOR 147.377;
		LEVEL Z FOR 54.414;
		LEVEL 0 FOR 145.331;
		LEVEL Z FOR 129.669;
		LEVEL 0 FOR 95.331;
		LEVEL Z FOR 78.052;
		LEVEL 0 FOR 96.928;
		LEVEL Z FOR 87.086;
		LEVEL 1 FOR 100.0;
		LEVEL Z FOR 116.657;
		LEVEL 0 FOR 91.665;
		LEVEL Z FOR 91.678;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 500.0;
	}
}

TRANSITION_LIST("DioExt[7]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 150.0;
		LEVEL 0 FOR 450.0;
		LEVEL Z FOR 65.58;
		LEVEL 0 FOR 147.131;
		LEVEL Z FOR 54.414;
		LEVEL 0 FOR 145.331;
		LEVEL Z FOR 129.669;
		LEVEL 0 FOR 95.331;
		LEVEL Z FOR 78.052;
		LEVEL 0 FOR 96.928;
		LEVEL Z FOR 87.564;
		LEVEL 0 FOR 100.0;
		LEVEL Z FOR 116.179;
		LEVEL 1 FOR 43.133;
		LEVEL 0 FOR 48.532;
		LEVEL Z FOR 92.156;
		LEVEL 1 FOR 100.0;
		LEVEL Z FOR 500.0;
	}
}

TRANSITION_LIST("SelA")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1125.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 500.0;
	}
}

TRANSITION_LIST("RnWa")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1700.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 700.0;
	}
}

TRANSITION_LIST("Acc8Bit:A1|FF[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1552.954;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 547.046;
	}
}

TRANSITION_LIST("Acc8Bit:A1|FF[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1352.954;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 947.046;
	}
}

TRANSITION_LIST("Acc8Bit:A1|FF[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1152.954;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1147.046;
	}
}

TRANSITION_LIST("Acc8Bit:A1|FF[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1352.954;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 747.046;
	}
}

TRANSITION_LIST("Acc8Bit:A1|FF[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1552.954;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 547.046;
	}
}

TRANSITION_LIST("Acc8Bit:A1|FF[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1352.954;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 947.046;
	}
}

TRANSITION_LIST("Acc8Bit:A1|FF[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1152.954;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1147.046;
	}
}

TRANSITION_LIST("Acc8Bit:A1|FF[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1352.954;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 747.046;
	}
}

DISPLAY_LINE
{
	CHANNEL = "Clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DioExtOut";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12, 13, 14, 15, 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[7]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[6]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[5]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[4]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[3]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[2]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[1]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "DioExt[0]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "Sel1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RnW1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Sel2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RnW2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Sel3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RnW3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SelA";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 25;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RnWa";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 26;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FF";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
	CHILDREN = 28, 29, 30, 31, 32, 33, 34, 35;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FF[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FF[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FF[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FF[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FF[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FF[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FF[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R1|FF[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FF";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
	CHILDREN = 37, 38, 39, 40, 41, 42, 43, 44;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FF[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FF[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FF[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FF[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FF[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FF[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FF[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R2|FF[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FF";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 0;
	CHILDREN = 46, 47, 48, 49, 50, 51, 52, 53;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FF[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FF[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FF[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FF[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FF[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FF[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FF[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Reg8bit:R3|FF[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "Acc8Bit:A1|FF";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 0;
	CHILDREN = 55, 56, 57, 58, 59, 60, 61, 62;
}

DISPLAY_LINE
{
	CHANNEL = "Acc8Bit:A1|FF[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Acc8Bit:A1|FF[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Acc8Bit:A1|FF[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Acc8Bit:A1|FF[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Acc8Bit:A1|FF[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Acc8Bit:A1|FF[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Acc8Bit:A1|FF[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 54;
}

DISPLAY_LINE
{
	CHANNEL = "Acc8Bit:A1|FF[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 54;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
